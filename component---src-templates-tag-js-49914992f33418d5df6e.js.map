{"version":3,"sources":["webpack://algo-lib/./src/components/AlgoCard.js","webpack://algo-lib/./src/components/Title.js","webpack://algo-lib/./src/templates/tag.js"],"names":["CardWrapper","styled","props","theme","spacing","small","color","border","shadow","card","breakpoint","tablet","mobile","CardTitle","H3","CardText","P","xSmall","textLight","CardLink","Link","heading","CardContainer","AlgoCard","date","preview_text","slug","title","tags","Tags","undefined","map","tag","to","key","Author","CardsHeading","Subtitle","Title","H1","children","author","subtitle","cardsHeading","AllTagsLink","InternalLink","pageContext","data","totalCount","allMdx","algos","edges","size","algo","node","frontmatter","description","article","keywords"],"mappings":"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","file":"component---src-templates-tag-js-49914992f33418d5df6e.js","sourcesContent":["import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { H3, P } from \"./elements\"\r\nimport { Tag, TagBar } from \"./Tag\"\r\n\r\nconst CardWrapper = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  min-height: 220px;\r\n  max-height: 240px;\r\n\r\n  padding: ${props => props.theme.spacing.small};\r\n\r\n  border: 1px solid ${props => props.theme.color.border};\r\n  border-radius: 5px;\r\n  transition: border 0.1s;\r\n  transition: box-shadow 0.3s;\r\n\r\n  &:hover {\r\n    box-shadow: ${props => props.theme.shadow.card};\r\n  }\r\n\r\n  @media ${props => props.theme.breakpoint.tablet} {\r\n    min-height: 205px;\r\n  }\r\n\r\n  @media ${props => props.theme.breakpoint.mobile} {\r\n    min-height: 180px;\r\n  }\r\n`\r\n\r\nconst CardTitle = styled(H3)`\r\n  margin: 0;\r\n`\r\n\r\nconst CardText = styled(P)`\r\n  margin: ${props => props.theme.spacing.xSmall} 0\r\n    ${props => props.theme.spacing.xSmall};\r\n  line-height: 1.32;\r\n  color: ${props => props.theme.color.textLight};\r\n  font-size: 1.05rem;\r\n`\r\n\r\nconst CardLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${props => props.theme.color.heading};\r\n`\r\n\r\n// container for multiple cards\r\nexport const CardContainer = styled.section`\r\n  margin: ${props => props.theme.spacing.xSmall} 0;\r\n  width: 100%;\r\n\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-column-gap: ${props => props.theme.spacing.small};\r\n  grid-row-gap: ${props => props.theme.spacing.small};\r\n\r\n  @media ${props => props.theme.breakpoint.tablet} {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media ${props => props.theme.breakpoint.mobile} {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`\r\n\r\nexport const AlgoCard = ({ date, preview_text, slug, title, tags }) => {\r\n  const Tags =\r\n    tags !== undefined\r\n      ? tags.map(tag => (\r\n          <Tag to={`/${tag}`} key={tag}>\r\n            {tag}\r\n          </Tag>\r\n        ))\r\n      : undefined\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <CardLink to={`/${slug}`}>\r\n        <CardTitle>{title}</CardTitle>\r\n        {/* <CardDate>{date}</CardDate> */}\r\n        <CardText>{preview_text}</CardText>\r\n      </CardLink>\r\n      <TagBar>{Tags}</TagBar>\r\n    </CardWrapper>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { H1, Subtitle } from \"../components/elements\"\r\nimport { Tag, TagBar } from \"./Tag\"\r\n\r\nconst Author = styled.span`\r\n  font-weight: 600;\r\n`\r\n\r\nconst CardsHeading = styled(Subtitle)`\r\n  margin: ${props => props.theme.spacing.small} 0;\r\n`\r\n\r\nexport function Title(props) {\r\n  const Tags = props.tags\r\n    ? props.tags.map(tag => (\r\n        <Tag to={`/${tag}`} key={tag}>\r\n          {tag}\r\n        </Tag>\r\n      ))\r\n    : undefined\r\n\r\n  // display author and date or subtitle or heading for card section\r\n  return (\r\n    <div>\r\n      {Tags ? <TagBar>{Tags}</TagBar> : null}\r\n      <H1>{props.children}</H1>\r\n      {props.author ? (\r\n        <Subtitle>\r\n          by <Author>{props.author}</Author> | {props.date}\r\n        </Subtitle>\r\n      ) : props.subtitle ? (\r\n        <Subtitle>{props.subtitle}</Subtitle>\r\n      ) : props.cardsHeading ? (\r\n        <CardsHeading>{props.cardsHeading}</CardsHeading>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import { graphql } from \"gatsby\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { AlgoCard, CardContainer } from \"../components/AlgoCard\"\r\nimport { InternalLink } from \"../components/elements\"\r\nimport PageWrapper from \"../components/PageWrapper\"\r\nimport SEO from \"../components/Seo\"\r\nimport { Tag } from \"../components/Tag\"\r\nimport { Title } from \"../components/Title\"\r\n\r\nconst AllTagsLink = styled(InternalLink)`\r\n  // position: absolute;\r\n  // bottom: ${props => props.theme.spacing.small};\r\n`\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  // Not using pagination\r\n  // const { tag, currentPage, numPagesForTag } = pageContext\r\n  // const isFirst = currentPage === 1\r\n  // const isLast = currentPage === numPagesForTag\r\n  // const prevPage =\r\n  //   currentPage - 1 === 1\r\n  //     ? `/${tag.toLowerCase()}`\r\n  //     : `/${tag}/${currentPage - 1}`\r\n  // const nextPage = `/${tag.toLowerCase()}/${currentPage + 1}`\r\n  const { totalCount } = data.allMdx\r\n  const algos = data.allMdx.edges\r\n\r\n  return (\r\n    <PageWrapper tags={[tag]}>\r\n      <Title\r\n        cardsHeading={`Found ${totalCount} algorithm${\r\n          totalCount === 1 ? \"\" : \"s\"\r\n        }`}\r\n      >\r\n        <Tag size=\"large\" to={`/${tag}`}>\r\n          {tag}\r\n        </Tag>\r\n      </Title>\r\n\r\n      <CardContainer>\r\n        {algos.map(algo => (\r\n          <AlgoCard\r\n            key={algo.node.frontmatter.slug}\r\n            date={algo.node.frontmatter.date}\r\n            title={algo.node.frontmatter.title}\r\n            preview_text={algo.node.frontmatter.preview_text}\r\n            slug={algo.node.frontmatter.slug}\r\n            tags={algo.node.frontmatter.tags}\r\n          />\r\n        ))}\r\n      </CardContainer>\r\n\r\n      {/* <Pagination\r\n        isFirst={isFirst}\r\n        isLast={isLast}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n        numPages={numPagesForTag}\r\n      /> */}\r\n      <AllTagsLink to=\"/tags\">View all tags</AllTagsLink>\r\n      <SEO\r\n        title={tag}\r\n        slug={tag}\r\n        description={`${totalCount} algorithm${\r\n          totalCount === 1 ? \"\" : \"s\"\r\n        } tagged with ${tag}`}\r\n        article={false}\r\n        keywords={[tag]}\r\n      />\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\n// Not using pagination\r\n// query($tag: String, $skip: Int!, $limit: Int!)\r\n// allMdx limit: $limit\r\n// allMdx skip: $skip\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMdx(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            slug\r\n            preview_text\r\n            date(formatString: \"MMM DD, YYYY\")\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}