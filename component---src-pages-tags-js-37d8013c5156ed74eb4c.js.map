{"version":3,"sources":["webpack://algo-lib/./src/components/Tag.js","webpack://algo-lib/./src/components/Title.js","webpack://algo-lib/./src/pages/tags.js","webpack://algo-lib/./src/utils/tag-categories.js"],"names":["StyledTag","styled","props","theme","color","tag","camelCase","to","slice","spacing","xxSmall","xSmall","tagText","text","StyledMediumTag","small","medium","StyledLargeTag","Tag","linkTarget","toLowerCase","replace","size","undefined","getTagCategory","children","TagBar","Author","CardsHeading","Subtitle","Title","Tags","tags","map","key","H1","author","date","subtitle","cardsHeading","TagContainer","data","allMdx","group","tagCount","length","H3","id","filter","tagName","tagCategories","recursive","backtracking","divideAndConquer","sorting","search","criticalSection","dynamicProgramming","nlp"],"mappings":"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","file":"component---src-pages-tags-js-37d8013c5156ed74eb4c.js","sourcesContent":["import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { camelCase } from \"../utils/string\"\r\nimport { getTagCategory } from \"../utils/tag-categories\"\r\n\r\n// regular tag size\r\nconst StyledTag = styled(props => <Link {...props} />)`\r\n  display: inline-block;\r\n\r\n  // set color according to tag name\r\n  background-color: ${props =>\r\n    props.theme.color.tag[camelCase(props.to.slice(1))]};\r\n  border: 1px solid\r\n    ${props => props.theme.color.tag[camelCase(props.to.slice(1))]};\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n\r\n  padding: ${props => props.theme.spacing.xxSmall};\r\n  margin: 0 ${props => props.theme.spacing.xSmall} 0 0;\r\n\r\n  font-size: 0.75rem;\r\n  font-weight: bold;\r\n  color: ${props => props.theme.color.tagText};\r\n  text-decoration: none;\r\n\r\n  user-drag: none;\r\n  cursor: pointer;\r\n  tabindex: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid ${props => props.theme.color.text};\r\n    outline: none;\r\n  }\r\n\r\n  &:first-child {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\n// medium tag size\r\nconst StyledMediumTag = styled(StyledTag)`\r\n  font-size: 1.25rem;\r\n\r\n  padding: ${props => props.theme.spacing.small}\r\n    ${props => props.theme.spacing.medium};\r\n  margin: 0 ${props => props.theme.spacing.xSmall};\r\n`\r\n\r\n// large tag size\r\nconst StyledLargeTag = styled(StyledTag)`\r\n  font-size: 3rem;\r\n  font-size: min(3rem, 12.5vw);\r\n  max-witdh: 100%;\r\n\r\n  padding: ${props => props.theme.spacing.xSmall};\r\n  margin-left: ${props => props.theme.spacing.small};\r\n  margin-right: 0;\r\n`\r\n\r\nexport const Tag = props => {\r\n  const linkTarget = props.to.toLowerCase().replace(\" \", \"-\")\r\n  const size = props.size !== undefined ? props.size.toLowerCase() : undefined\r\n\r\n  // check if tag has been definied in tag-categories.js\r\n  const tagDefined =\r\n    getTagCategory({ tag: props.children }) !== undefined ? true : false\r\n\r\n  // do not render if tag has not been defined\r\n  if (!tagDefined) {\r\n    return null\r\n  }\r\n\r\n  // render according to tag size\r\n  if (size === \"large\") {\r\n    return (\r\n      <StyledLargeTag to={`${linkTarget}`}>{props.children}</StyledLargeTag>\r\n    )\r\n  } else if (size === \"medium\") {\r\n    return (\r\n      <StyledMediumTag to={`${linkTarget}`}>{props.children}</StyledMediumTag>\r\n    )\r\n  } else {\r\n    return <StyledTag to={`${linkTarget}`}>{props.children}</StyledTag>\r\n  }\r\n}\r\n\r\n// container for multiple tags\r\nexport const TagBar = styled.div`\r\n  margin: ${props => props.theme.spacing.small} 0 0;\r\n  display: flex;\r\n  align-items: flex-start;\r\n`\r\n\r\n// heading same size as large tag\r\nexport const TagHeading = styled.h1`\r\n  display: inline-block;\r\n  font-size: 1.75rem;\r\n  font-weight: bold;\r\n  color: ${props => props.theme.color.text};\r\n`\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { H1, Subtitle } from \"../components/elements\"\r\nimport { Tag, TagBar } from \"./Tag\"\r\n\r\nconst Author = styled.span`\r\n  font-weight: 600;\r\n`\r\n\r\nconst CardsHeading = styled(Subtitle)`\r\n  margin: ${props => props.theme.spacing.small} 0;\r\n`\r\n\r\nexport function Title(props) {\r\n  const Tags = props.tags\r\n    ? props.tags.map(tag => (\r\n        <Tag to={`/${tag}`} key={tag}>\r\n          {tag}\r\n        </Tag>\r\n      ))\r\n    : undefined\r\n\r\n  // display author and date or subtitle or heading for card section\r\n  return (\r\n    <div>\r\n      {Tags ? <TagBar>{Tags}</TagBar> : null}\r\n      <H1>{props.children}</H1>\r\n      {props.author ? (\r\n        <Subtitle>\r\n          by <Author>{props.author}</Author> | {props.date}\r\n        </Subtitle>\r\n      ) : props.subtitle ? (\r\n        <Subtitle>{props.subtitle}</Subtitle>\r\n      ) : props.cardsHeading ? (\r\n        <CardsHeading>{props.cardsHeading}</CardsHeading>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import { graphql } from \"gatsby\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Anchor, H3 } from \"../components/elements\"\r\nimport PageWrapper from \"../components/PageWrapper\"\r\nimport { Tag } from \"../components/Tag\"\r\nimport { Title } from \"../components/Title\"\r\nimport { getTagCategory } from \"../utils/tag-categories\"\r\n\r\nconst TagContainer = styled.section`\r\n  margin: ${props => props.theme.spacing.xSmall} 0;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  a {\r\n    margin: 0 ${props => props.theme.spacing.small}\r\n      ${props => props.theme.spacing.xSmall} 0;\r\n  }\r\n`\r\n\r\nconst Tags = ({ data }) => {\r\n  const tags = data.allMdx.group\r\n\r\n  const tagCount = tags.length\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <Title subtitle={`found ${tagCount} tag${tagCount === 1 ? \"\" : \"s\"}`}>\r\n        All Tags\r\n      </Title>\r\n\r\n      <H3>\r\n        <Anchor id=\"types\" />\r\n        by type\r\n      </H3>\r\n      <TagContainer>\r\n        {tags\r\n          .filter(tag => getTagCategory(tag) === \"type\")\r\n          .map(tag => (\r\n            <Tag size=\"medium\" key={tag.tag} to={`/${tag.tag}`}>\r\n              {tag.tag}\r\n            </Tag>\r\n          ))}\r\n      </TagContainer>\r\n      <H3>\r\n        <Anchor id=\"applications\" />\r\n        by application\r\n      </H3>\r\n      <TagContainer>\r\n        {tags\r\n          .filter(tag => getTagCategory(tag) === \"application\")\r\n          .map(tag => (\r\n            <Tag size=\"medium\" key={tag.tag} to={`/${tag.tag}`}>\r\n              {tag.tag}\r\n            </Tag>\r\n          ))}\r\n      </TagContainer>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const allTagsQuery = graphql`\r\n  query {\r\n    allMdx {\r\n      group(field: frontmatter___tags) {\r\n        tag: fieldValue\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { camelCase } from \"./string\"\r\n\r\n// returns tag category or undefined\r\nexport const getTagCategory = tag => {\r\n  const tagName = camelCase(tag.tag)\r\n  return tagCategories[tagName] !== undefined\r\n    ? tagCategories[tagName]\r\n    : undefined // tag not defined in list below\r\n}\r\n\r\n// list of tags with their categories\r\n// tagName: \"category\"\r\nconst tagCategories = {\r\n  recursive: \"type\",\r\n  backtracking: \"type\",\r\n  divideAndConquer: \"type\",\r\n  sorting: \"application\",\r\n  search: \"application\",\r\n  criticalSection: \"application\",\r\n  dynamicProgramming: \"type\",\r\n  nlp: \"application\",\r\n}\r\n"],"sourceRoot":""}